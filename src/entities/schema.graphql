type User {
  id: ID!
  name: String!
  email: String!
  rides: [Ride]!
  subscribedRides: [SubscribedRide]!
}

type Ride {
  id: ID!
  user_id: String!
  name: String!
  start_date: String!
  start_date_registration: String!
  end_date_registration: String!
  additional_information: String
  start_place: String!
  participants_limit: Int
  subscribers: [SubscribedRide]!
}

type SubscribedRide {
  ride: Ride!
  subscription_date: String!
}

type Query {
  login(email: String!, password: String!): String #done
  rides(offset: Int!, pageSize: Int!): [Ride]
  subscribedRides: [Ride]
  createdRides: [Ride]
}

input createRideInput {
  name: String!
  start_date: String!
  start_date_registration: String!
  end_date_registration: String!
  additional_information: String
  start_place: String!
  participants_limit: Int
}

type Mutation {
  createUser(email: String!, password: String!): string #done
  createRide(ride: createRideInput!): ID #done
  subscribe(rideId: String!): Boolean
}
